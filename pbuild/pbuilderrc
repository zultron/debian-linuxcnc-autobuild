#							-*-shell-script-*-
# TOPDIR, ARCH and DIST should be passed in from outside
test -z "$TOPDIR" && echo "error:  TOPDIR undefined" 1>&2 && exit 1
test -z "$ARCH" && echo "error:  ARCH undefined" 1>&2 && exit 1
test -z "$DIST" && echo "error:  DIST undefined" 1>&2 && exit 1

# Other useful opts from cmdline:
# DEBBUILDOPTS=-Tbinary-arch
# DEBEMAIL='John Doe <jdoe@example.com>'

# Debian configuration
DEBIAN_SUITES=("squeeze")
DEBIAN_MIRROR="ftp.at.debian.org"

# Ubuntu configuration
UBUNTU_SUITES=("precise" "lucid" "hardy")
UBUNTU_MIRROR="ftp.ubuntu.com"

# Keyring file
KEYRING=keyring.gpg
APTKEYRINGS=("${APTKEYRINGS[@]}" "$TOPDIR/admin/$KEYRING")

# Distribution
DISTRIBUTION=${DIST}

# Base tarball
BASETGZ="${TOPDIR}/${DIST}/${ARCH}/base.tgz"

# Where to build
BUILDPLACE="${TOPDIR}/tmp"

# Where to place finished pkgs
BUILDRESULT="${TOPDIR}/${DIST}/${ARCH}/pkgs"

# cache for packages
APTCACHE="${TOPDIR}/${DIST}/${ARCH}/aptcache"

# ccache
CCACHEDIR="${TOPDIR}/ccache"
test -d ${CCACHEDIR} || mkdir -p ${CCACHEDIR}

# always log builds
PKGNAME_LOGFILE=yes

# hook directory
HOOKDIR="${TOPDIR}/pbuild"

# set arch in debootstrap
DEBOOTSTRAPOPTS=("${DEBOOTSTRAPOPTS[@]}" "--arch=${ARCH}" "--include=gnupg")

# set arch for create mode
ARCHITECTURE=${ARCH}

# unexport ARCH; messes with at least kernel pkgs
export -n ARCH; unset ARCH


if $(echo ${DEBIAN_SUITES[@]} | grep -q $DIST); then
    # Debian configuration
    MIRRORSITE="http://$DEBIAN_MIRROR/debian/"
    COMPONENTS="main contrib non-free"

elif $(echo ${UBUNTU_SUITES[@]} | grep -q $DIST); then
    # Ubuntu configuration
    MIRRORSITE="http://$UBUNTU_MIRROR/ubuntu/"
    COMPONENTS="main restricted universe multiverse"
    DEBOOTSTRAPOPTS=("${DEBOOTSTRAPOPTS[@]}"
	"--keyring=${TOPDIR}/admin/${KEYRING}")

else
    echo "Unknown distribution: $DIST"
    exit 1
fi


# Print diagnostics
echo "script = $(basename $0)"
for i in BASETGZ DISTRIBUTION APTCACHE MIRRORSITE COMPONENTS \
    DEBOOTSTRAPOPTS[@] OTHERMIRROR; do
    eval echo "$i = \${$i}"
done
